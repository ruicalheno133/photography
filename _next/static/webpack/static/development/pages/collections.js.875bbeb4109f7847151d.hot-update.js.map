{"version":3,"file":"static/webpack/static/development/pages/collections.js.875bbeb4109f7847151d.hot-update.js","sources":["webpack:///./components/horizontalPhotoList.js"],"sourcesContent":["import React from \"react\";\nimport window from 'global'\nimport { CSSTransition } from 'react-transition-group'\nimport Fade from 'react-reveal/Fade'\nimport PhotoModal from './photoModal.js'\n\nconst sideScroller = {\n  whiteSpace: 'nowrap',\n  width: '100%',\n  top: '-1em',\n  transform: 'translateX(100%)',\n  textAlign: 'left',\n  margin: 0,\n  padding: 0,\n}\n\nconst imgH = {\n  display: 'inline-block',\n  width: '70vmin',\n  marginLeft: '5vmin',\n  marginTop: 0,\n  marginBottom: 0,\n  padding: 0\n}\n\nconst imgV = {\n  display: 'inline-block',\n  height: '70vmin',\n  marginLeft: '5vmin',\n  marginTop: 0,\n  marginBottom: 0,\n  padding: 0\n}\n\nconst backButton = {\n  display: 'inline-block',\n  color: 'black',\n  marginLeft: '5em',\n  marginRight: '5em',\n  marginTop: 0,\n  marginBottom: 0,\n  padding: 0,\n  cursor: 'pointer',\n  textAlign: 'center'\n}\n\n\n\n\nclass HorizontalPhotoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const animateList = props.photos.map((img) => {\n          return 'appear'\n        })\n        this.state = ({animate: animateList, showModal: false, modalIndex: 0})\n        this.animate = this.animate.bind(this)\n        super();\n    }\n\n    animate (index) {\n      var newList = []\n\n      if (this.state.showModal == false ) {\n        for (let i = 0; i < this.state.animate.length; i++) {\n          newList.push('hide')\n\n        }\n\n        this.setState({animate: newList, modalIndex: index, showModal: true})\n      } else {\n        for (let i = 0; i < this.state.animate.length; i++) {\n          newList.push('show')\n        }\n        this.setState({animate: newList, modalIndex: index, showModal: false})\n      }\n\n      \n    }\n\n    componentDidMount(){\n\n    }\n\n    render() {\n        \n\n        const photos = this.props.photos.map((img, index) => {\n            if (img.orientation == 'V') {\n              return (\n                  <img style={imgV} className={this.state.animate[index]} src={process.env.BACKEND_URL + img.src} />\n              )\n            } else {\n              return (\n                  <img style={imgH} className={this.state.animate[index]} src={process.env.BACKEND_URL + img.src} />\n              )\n            }\n\n        })\n\n        return (\n          <div>\n          <CSSTransition\n            in={true}\n            timeout={2000}\n            classNames=\"collection-transition\"\n          >\n            \n            <div key={0} style={sideScroller}>\n\n              {photos}\n                           \n              <a style={backButton} onClick={this.props.goBack}>\n                <h1 style={{fontSize: '2vmax'}}> GO <br/> BACK</h1>\n              </a>\n            </div>   \n\n          </CSSTransition>\n          <PhotoModal \n            show={this.state.showModal} \n            photo={this.props.photos[this.state.modalIndex]} \n            click={this.animate}\n            />\n          </div>\n\n        )\n    }\n}\n\nexport default HorizontalPhotoList\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAcA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;AAEA;;;AAIA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA9EA;AACA;AAgFA;;;;;A","sourceRoot":""}